- id: energy_update
  alias: energy_update
  trigger:
    platform: time_pattern
    minutes: /5
  condition:
    condition: time
    after: '15:04:00'
    before: '19:59:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: python_script.simple_load_control
    data_template:
      debug: 0
      kWH_limit: "{{ states('input_number.kwh_limit') }}"
#    service: python_script.time_based_load_control
#    data_template:
#      debug: 0
#      # kWH_limit: 4
#      kWH_limit: "{{ states('input_number.kwh_limit') }}"

- id: ac_run_timer_end
  alias: Set high AC setpoint when the ac_timer expires
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.ac_run_timer
  action:
    service: python_script.hi_temp
    data_template:
      debug: 0

- id: energy_update_legacy
  alias: energy_update_legacy
  trigger:
    platform: time_pattern
    minutes: /5
  condition:
    condition: time
    after: '15:09:00'
    before: '19:59:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: python_script.load_control
    data_template:
      debug: 0

- id: precool
  alias: precool
  trigger:
    platform: time
    at: '13:30'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: python_script.precool
    data_template:
      debug: 0

- id: start_peak_time
  alias: start_peak_time
  trigger:
    platform: time
    at: '15:00'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: python_script.target_temp
    data_template:
      debug: 0
  - service: switch.turn_off
    entity_id: switch.downstairs_circulate
  - service: switch.turn_off
    entity_id: switch.upstairs_circulate

- id: target_temp
  alias: target_temp
  trigger:
  - platform: time
    at: '20:00'
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: timer.cancel
    target:
      entity_id: timer.ac_run_timer
  - service: python_script.target_temp
    data_template:
      debug: 0
  - service: input_number.set_value
    target:
      entity_id: input_number.predicted_demand_50
    data:
      value: 0
  - service: input_number.set_value
    target:
      entity_id: input_number.predicted_demand_30
    data:
      value: 0
  mode: single

- id: front_lights_on
  alias: Front yard lights on at sunset
  trigger:
  - platform: sun
    event: sunset
  condition: []
  action:
  - service: switch.turn_on
    entity_id: switch.front_lights
  mode: single

- id: front_lights_off_weekday
  alias: Front yard lights off for the night weekday
  trigger:
  - platform: time
    at: '22:00'
  condition:
  - condition: time
    weekday:
    - sun
    - mon
    - tue
    - wed
    - thu
  action:
  - service: switch.turn_off
    entity_id: switch.front_lights
  mode: single

- id: front_lights_off_weekend
  alias: Front yard lights off for the night weekend
  trigger:
  - platform: time
    at: '23:59'
  condition:
  - condition: time
    weekday:
    - fri
    - sat
  action:
  - service: switch.turn_off
    entity_id: switch.front_lights
  mode: single

- id: ambient_lights_sunset
  alias: Ambient lights on at sunset
  trigger:
    platform: sun
    event: sunset
    offset: -00:20:00
  condition: []
  action:
  - service: homeassistant.turn_on
    entity_id: group.ambient_lights
  #- service: homeassistant.turn_on
  #  entity_id: group.back_yard_lights

- id: ambient_lights_off
  alias: Ambient lights off at night
  trigger:
  - at: '22:00'
    platform: time
  condition: []
  action:
  - entity_id: group.ambient_lights
    service: homeassistant.turn_off
  #- entity_id: group.back_yard_lights
  #  service: homeassistant.turn_off

- id: ambient_lights_morning_on
  alias: Ambient lights on in the morning
  trigger:
    platform: time
    at: '6:00'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: homeassistant.turn_on
    entity_id: group.ambient_lights

- id: ambient_lights_morning_off
  alias: Ambient lights off in the morning
  trigger:
    platform: time
    at: '7:00'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: homeassistant.turn_off
    entity_id: group.ambient_lights

- id: christmas_lights_on_evening
  alias: Christmas yard lights on at sunset
  trigger:
    platform: sun
    event: sunset
  condition: []
  action:
    service: switch.turn_on
    entity_id: switch.christmas_lights

- id: christmas_lights_off_evening
  alias: Christmans yard lights off for the night
  trigger:
    platform: time
    at: '23:00'
  condition: []
  action:
    service: switch.turn_off
    entity_id: switch.christmas_lights

- id: christmas_lights_on_morning
  alias: Christmas yard lights on in the morning
  trigger:
    platform: sun
    event: sunrise
    offset: -01:00
  condition: []
  action:
    service: switch.turn_on
    entity_id: switch.christmas_lights

- id: christmas_lights_off_morning
  alias: Christmans yard lights off in the morning
  trigger:
    platform: sun
    event: sunrise
    offset: +0:30
  condition: []
  action:
    service: switch.turn_off
    entity_id: switch.christmas_lights

- id: set_nighttime_heat
  alias: Set nighttime heat
  trigger:
  - platform: time
    at: '14:00'
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
    - sun
  action:
  - service: python_script.nighttime_heat
    data_template:
      debug: 0
  mode: single

- id: set_daytime_heat_weekday
  alias: Set daytime heat weekdays
  trigger:
    platform: time
    at: '5:30'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: python_script.daytime_heat
    data_template:
      debug: 0

- id: set_daytime_heat_weekend
  alias: Set daytime heat weekends
  trigger:
    platform: time
    at: '7:00'
  condition:
    condition: time
    weekday:
    - sat
    - sun
  action:
    service: python_script.daytime_heat
    data_template:
      debug: 0

#######################################################################
# Doggie door
- id: dog_lights_off
  alias: Turn lights off when the doggie door motion timer expires
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.dog_lights
  action:
    service: homeassistant.turn_off
    entity_id: switch.stair_lights

- id: dog_lights_on
  alias: Turn lights on when there is motion at the doggie door
  trigger:
  - platform: state
    entity_id: sensor.doggie_door_motion
    from: '0'
    to: '8'
  condition:
  - condition: time
    after: '22:30:00'
    before: 05:30:00
  action:
  - service: homeassistant.turn_on
    entity_id: switch.stair_lights
  - service: timer.start
    data:
      duration: '0'
    target:
      entity_id: timer.dog_lights
  mode: single

#######################################################################
# Only allow one AC on at a time
# Unfortunately you can't set the temp when the unit is off.
# And I'm not sure it saves much because the upstairs stays on twice 
# as long as with both of them.
#
#- id: downstairs_ac_on
#  alias: Turn off upstairs AC when downstairs AC turns on
#  trigger:
#  - platform: state
#    entity_id: sensor.downstairs_cooling
#    from: '0'
#    to: '1'
#  condition:
#  - condition: time
#    after: '15:00:00'
#    before: '20:00:00'
#  action:
#  - service: climate.turn_off
#    entity_id: climate.trane_corporation_model_tzemt524aa21ma_mode_2
#
#- id: downstairs_ac_off
#  alias: Turn on upstairs AC when downstairs AC turns off
#  trigger:
#  - platform: state
#    entity_id: sensor.downstairs_cooling
#    from: '1'
#    to: '0'
#  condition:
#  - condition: time
#    after: '15:00:00'
#    before: '20:00:00'
#  action:
#  - service: climate.turn_on
#    entity_id: climate.trane_corporation_model_tzemt524aa21ma_mode_2

#- id: upstairs_ac_on
#  alias: Turn off downstairs AC when upstairs AC turns on
#  trigger:
#  - platform: state
#    entity_id: sensor.upstairs_cooling
#    from: '0'
#    to: '1'
#  condition:
#  - condition: time
#    after: '15:00:00'
#    before: '20:00:00'
#  action:
#  - service: climate.turn_off
#    entity_id: climate.trane_corporation_model_tzemt524aa21ma_mode

#- id: upstairs_ac_off
#  alias: Turn on downstairs AC when upstairs AC turns off
#  trigger:
#  - platform: state
#    entity_id: sensor.upstairs_cooling
#    from: '1'
#    to: '0'
#  condition:
#  - condition: time
#    after: '15:00:00'
#    before: '20:00:00'
#  action:
#  - service: climate.turn_on
#    entity_id: climate.trane_corporation_model_tzemt524aa21ma_mode
