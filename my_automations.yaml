- id: energy_update
  alias: "Energy: update"
  trigger:
    platform: time_pattern
    minutes: /5
  condition:
    condition: time
    after: '16:04:00'
    before: '18:59:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: python_script.simple_load_control
    data_template:
      kWH_limit: '{{ states("input_number.kwh_limit") }}'
      debug: 0

#- id: ac_run_timer_end
#  alias: "Energy: Set high AC setpoint when the ac_timer expires"
#  trigger:
#    platform: event
#    event_type: timer.finished
#    event_data:
#      entity_id: timer.ac_run_timer
#  action:
#    service: python_script.set_temp
#    data_template:
#      setpoint: '{{ states("input_number.hi_temp") }}'

- id: precool
  alias: "Energy: precool"
  trigger:
    platform: time
    at: '14:30'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: python_script.set_temp
    data_template:
      setpoint: '{{ states("input_number.precool_temp") }}'

- id: start_peak_time
  alias: "Energy: start peak time"
  trigger:
    platform: time
    at: '16:00'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: python_script.set_temp
    data_template:
      setpoint: '{{ states("input_number.target_temp") }}'
  - service: switch.turn_off
    entity_id: switch.downstairs_circulate
  - service: switch.turn_off
    entity_id: switch.upstairs_circulate
  - service: climate.set_temperature
    entity_id: climate.hot_tub
    data_template:
      temperature: '{{ states("input_number.hot_tub_rest_temp") }}'

- id: target_temp
  alias: "Energy: set target temp at end of peak time"
  trigger:
  - platform: time
    at: '19:00'
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: timer.cancel
    target:
      entity_id: timer.ac_run_timer
  - service: python_script.set_temp
    data_template:
      setpoint: '{{ states("input_number.target_temp") }}'
  - service: input_number.set_value
    target:
      entity_id: input_number.predicted_demand_50
    data:
      value: 0
  - service: input_number.set_value
    target:
      entity_id: input_number.predicted_demand_30
    data:
      value: 0
  mode: single

- id: start_peak_time_hot_tub
  alias: "Energy: set hot tub rest temp at peak time"
  trigger:
    platform: time
    at: '16:00'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: climate.set_temperature
    entity_id: climate.hot_tub
    data_template:
      temperature: '{{ states("input_number.hot_tub_rest_temp") }}'

- id: end_peak_time_hot_tub
  alias: "Energy: set hot tub run temp at end of peak time"
  trigger:
  - platform: time
    at: '19:00'
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: climate.set_temperature
    entity_id: climate.hot_tub
    data_template:
      temperature: '{{ states("input_number.hot_tub_run_temp") }}'

#######################################################################
# Scheduled climate settings
#
- id: set_wake_temp_weekday
  alias: "Thermostat: Set wake temp weekdays"
  trigger:
    platform: time
    at: '5:30'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: python_script.set_temp
    data_template:
      setpoint: '{{ states("input_number.wake_temp") }}'
      set_heat: 1

- id: set_wake_temp_weekend
  alias: "Thermostat: Set wake temp weekends"
  trigger:
    platform: time
    at: '7:00'
  condition:
    condition: time
    weekday:
    - sat
    - sun
  action:
    service: python_script.set_temp
    data_template:
      setpoint: '{{ states("input_number.wake_temp") }}'
      set_heat: 1

- id: set_daytime_temp
  alias: "Thermostat: Set daytime temperature"
  trigger:
  - platform: time
    at: '08:00'
  action:
    service: python_script.set_temp
    data_template:
      setpoint: '{{ states("input_number.target_temp") }}'

- id: set_sleep_temp
  alias: "Thermostat: Set bedtime temperature"
  trigger:
  - platform: time
    at: '20:30'
  action:
    service: python_script.set_temp
    data_template:
      setpoint: '{{ states("input_number.sleep_temp") }}'

#- id: set_wake_temp
#  alias: "Thermostat: Set wake temperature"
#  trigger:
#  - platform: time
#    at: '05:00'
#  action:
#    service: python_script.set_temp
#    data_template:
#      setpoint: '{{ states("input_number.wake_temp") }}'

#- id: set_nighttime_heat
#  alias: "Thermostat: Set nighttime heat"
#  trigger:
#  - platform: time
#    at: '14:00'
#  condition:
#  - condition: time
#    weekday:
#    - mon
#    - tue
#    - wed
#    - thu
#    - fri
#    - sat
#    - sun
#  action:
#    service: python_script.set_temp
#    data_template:
#      setpoint: '{{ states("input_number.nighttime_heat") }}'
#      set_heat: 1
#  mode: single


#######################################################################
# Lights
#
- id: front_lights_on
  alias: "Lights: Front yard lights on at sunset"
  trigger:
  - platform: sun
    event: sunset
  condition: []
  action:
  - service: switch.turn_on
    entity_id: switch.front_lights
  mode: single

- id: front_lights_off_weekday
  alias: "Lights: Front yard lights off for the night weekday"
  trigger:
  - platform: time
    at: '22:00'
  condition:
  - condition: time
    weekday:
    - sun
    - mon
    - tue
    - wed
    - thu
  action:
  - service: switch.turn_off
    entity_id: switch.front_lights
  mode: single

- id: front_lights_off_weekend
  alias: "Lights: Front yard lights off for the night weekend"
  trigger:
  - platform: time
    at: '23:59'
  condition:
  - condition: time
    weekday:
    - fri
    - sat
  action:
  - service: switch.turn_off
    entity_id: switch.front_lights
  mode: single

- id: ambient_lights_sunset
  alias: "Lights: Ambient lights on at sunset"
  trigger:
    platform: sun
    event: sunset
    offset: -00:20:00
  condition: []
  action:
  - service: homeassistant.turn_on
    entity_id: group.ambient_lights

- id: ambient_lights_off
  alias: "Lights: Ambient lights off at night"
  trigger:
  - at: '22:00'
    platform: time
  condition: []
  action:
  - entity_id: group.ambient_lights
    service: homeassistant.turn_off

- id: ambient_lights_morning_on
  alias: "Lights: Ambient lights on in the morning"
  trigger:
    platform: time
    at: '6:00'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: homeassistant.turn_on
    entity_id: group.ambient_lights

- id: ambient_lights_morning_off
  alias: "Lights: Ambient lights off in the morning"
  trigger:
    platform: time
    at: '7:00'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: homeassistant.turn_off
    entity_id: group.ambient_lights

#######################################################################
# Christmas lights
- id: christmas_lights_on_evening
  alias: "Lights: Christmas yard lights on at sunset"
  trigger:
    platform: sun
    event: sunset
  condition: []
  action:
    service: switch.turn_on
    entity_id: switch.christmas_lights

- id: christmas_lights_off_evening
  alias: "Lights: Christmans yard lights off for the night"
  trigger:
    platform: time
    at: '23:00'
  condition: []
  action:
    service: switch.turn_off
    entity_id: switch.christmas_lights

- id: christmas_lights_on_morning
  alias: "Lights: Christmas yard lights on in the morning"
  trigger:
    platform: sun
    event: sunrise
    offset: -01:00
  condition: []
  action:
    service: switch.turn_on
    entity_id: switch.christmas_lights

- id: christmas_lights_off_morning
  alias: "Lights: Christmans yard lights off in the morning"
  trigger:
    platform: sun
    event: sunrise
    offset: +0:30
  condition: []
  action:
    service: switch.turn_off
    entity_id: switch.christmas_lights

#######################################################################
# Doggie door
- id: dog_lights_off
  alias: "Doggie door: Turn lights off when the doggie door motion timer expires"
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.dog_lights
  action:
    service: homeassistant.turn_off
    entity_id: switch.breakfast_area_light

- id: dog_lights_on
  alias: "Doggie door: Turn lights on when there is motion at the doggie door"
  trigger:
  - platform: state
    entity_id: binary_sensor.doggie_door_motion
    to: 'on'
  condition:
  - condition: time
    after: '22:30:00'
    before: 06:00:00
  action:
  - service: homeassistant.turn_on
    entity_id: switch.breakfast_area_light
  - service: timer.start
    data:
      duration: '0'
    target:
      entity_id: timer.dog_lights
  mode: single

#######################################################################
# ios actions for Apple watch
- id: toggle_desk_light
  alias: "Lights: Toggle desk lights with watch"
  initial_state: true
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: "Desk lights"
  action:
    - service: switch.toggle
      entity_id: switch.desk_lights

- id: toggle_master_light
  alias: "Lights: Toggle master light with watch"
  initial_state: true
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: "Master light"
  action:
    - service: switch.toggle
      entity_id: switch.master_light

#######################################################################
# automations for backyard screens
# WEST screen
- id: lower_west_patio_screen_in_the_afternoon
  alias: "Screens: Lower west patio screen in the afternoon"
  trigger:
    - platform: numeric_state
      entity_id: sun.sun
      attribute: azimuth
      above: 156
  condition:
    - condition: numeric_state
      entity_id: sensor.peak_wind_gust
      below: input_number.wind_threshold
  action:
    - service: cover.close_cover
      entity_id: cover.west_patio_screen

- id: lower_west_patio_screen_if_the_wind_dies_down
  alias: "Screens: Lower west patio screen if the wind dies down"
  trigger:
    - platform: numeric_state
      entity_id: sensor.peak_wind_gust
      below: input_number.wind_threshold
  condition:
    - and:
      - condition: numeric_state
        entity_id: sun.sun
        attribute: azimuth
        above: 156
      - condition: numeric_state
        entity_id: sun.sun
        attribute: elevation
        above: 2
  action:
    - service: cover.close_cover
      entity_id: cover.west_patio_screen

# MIDDLE screen
- id: lower_middle_patio_screen_in_the_afternoon
  alias: "Screens: Lower middle patio screen in the afternoon"
  trigger:
    - platform: numeric_state
      entity_id: sun.sun
      attribute: azimuth
      above: 235
  condition:
    - condition: numeric_state
      entity_id: sensor.peak_wind_gust
      below: input_number.wind_threshold
  action:
    - service: cover.close_cover
      entity_id: cover.middle_patio_screen

- id: lower_middle_patio_screen_if_the_wind_dies_down
  alias: "Screens: Lower middle patio screen if the wind dies down"
  trigger:
    - platform: numeric_state
      entity_id: sensor.peak_wind_gust
      below: input_number.wind_threshold
  condition:
    - and:
      - condition: numeric_state
        entity_id: sun.sun
        attribute: azimuth
        above: 235
      - condition: numeric_state
        entity_id: sun.sun
        attribute: elevation
        above: 2
  action:
    - service: cover.close_cover
      entity_id: cover.middle_patio_screen

# EAST screen
- id: lower_east_patio_screen_in_the_afternoon
  alias: "Screens: Lower east patio screen in the afternoon"
  trigger:
    - platform: numeric_state
      entity_id: sun.sun
      attribute: elevation
      below: 26
  condition:
    - condition: numeric_state
      entity_id: sensor.peak_wind_gust
      below: input_number.wind_threshold
  action:
    - service: cover.close_cover
      entity_id: cover.east_patio_screen

- id: lower_east_patio_screen_if_the_wind_dies_down
  alias: "Screens: Lower east patio screen if the wind dies down"
  trigger:
    - platform: numeric_state
      entity_id: sensor.peak_wind_gust
      below: input_number.wind_threshold
  condition:
    - and:
      - condition: numeric_state
        entity_id: sun.sun
        attribute: azimuth
        above: 235
      - condition: numeric_state
        entity_id: sun.sun
        attribute: elevation
        below: 26
      - condition: numeric_state
        entity_id: sun.sun
        attribute: elevation
        above: 2
  action:
    - service: cover.close_cover
      entity_id: cover.east_patio_screen

# ALL screens
- id: raise_back_patio_screens_at_sunset
  alias: "Screens: Raise back patio screens at sunset"
  trigger:
    - platform: numeric_state
      entity_id: sun.sun
      attribute: elevation
      below: 2
  action:
    - service: cover.open_cover
      entity_id: cover.back_patio_screens

- id: raise_back_patio_screens_due_to_wind
  alias: "Screens: Raise back patio screens due to wind"
  trigger:
    - platform: numeric_state
      entity_id: sensor.ambient_wind_gust
      above: input_number.wind_threshold
  action:
    - service: cover.open_cover
      entity_id: cover.back_patio_screens
