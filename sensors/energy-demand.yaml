# Energy demands
# See: https://www.home-assistant.io/components/sensor.filter

# 1 hour
- platform: filter
  name: "1 hr usage"
  entity_id: sensor.energy_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 01:00
      precision: 2
- platform: template
  sensors:
    1_hr_demand:
      friendly_name: 1 Hr Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: "{{ ((states('sensor.1_hr_usage') | float)/1000) | round(3) }}"

# 50 min
- platform: filter
  name: "50 min usage"
  entity_id: sensor.energy_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 00:50
      precision: 2
- platform: template
  sensors:
    50_min_demand:
      friendly_name: 50 Min Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: "{{ (states('sensor.50_min_usage') | float)/1000 }}"

# Medium time
- platform: filter
  name: "Medium usage"
  entity_id: sensor.energy_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 00:20
      precision: 2
- platform: template
  sensors:
    medium_demand:
      friendly_name: 20 Min Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: "{{ (states('sensor.medium_usage') | float)/1000 }}"

# Medium time
- platform: filter
  name: "Usage 25"
  entity_id: sensor.energy_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 00:25
      precision: 2
- platform: template
  sensors:
    demand_25:
      friendly_name: 25 Min Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: "{{ (states('sensor.usage_25') | float)/1000 }}"

# Medium time
- platform: filter
  name: "Medium long usage"
  entity_id: sensor.energy_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 00:40
      precision: 2
- platform: template
  sensors:
    medium_long_demand:
      friendly_name: 40 Min Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: "{{ (states('sensor.medium_long_usage') | float)/1000 }}"

# Fast time
- platform: filter
  name: "Fast usage"
  entity_id: sensor.energy_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 00:10
      precision: 2
- platform: template
  sensors:
    fast_demand:
      friendly_name: 10 Min Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: "{{ (states('sensor.fast_usage') | float)/1000 }}"

###############################################################################
# Peak interval usages
#
# Usage during peak time, zero otherwise
- platform: template
  sensors:
    peak_time_usage:
      friendly_name: "Peak Time Usage"
      unit_of_measurement: 'W'
      value_template: >
        {% if now().hour >= 16 and now().hour < 19 %}
          {{ states('sensor.energy_usage') }}
        {% else %}
          {{ 0 | float }}
        {% endif %}

# 1 hour
- platform: filter
  name: "1 hr peak time usage"
  entity_id: sensor.peak_time_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 01:00
      precision: 2
- platform: template
  sensors:
    1_hr_peak_time_demand:
      friendly_name: 1 Hr Peak Time Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: >
        {% if now().hour >= 16 and now().hour < 19 %}
          {{ ((states('sensor.1_hr_peak_time_usage') | float)/1000) }}
        {% else %}
          {{ 0 | float }}
        {% endif %}

# 55 minute
- platform: filter
  name: "55 min peak time usage"
  entity_id: sensor.peak_time_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 0:55
      precision: 2
- platform: template
  sensors:
    55_min_peak_time_demand:
      friendly_name: 55 Min Peak Time Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: >
        {% if now().hour >= 16 and now().hour < 19 %}
          {{ ((states('sensor.55_min_peak_time_usage') | float)/1000) }}
        {% else %}
          {{ 0 | float }}
        {% endif %}

# 50 minute
- platform: filter
  name: "50 min peak time usage"
  entity_id: sensor.peak_time_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 0:50
      precision: 2
- platform: template
  sensors:
    50_min_peak_time_demand:
      friendly_name: 50 Min Peak Time Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: >
        {% if now().hour >= 16 and now().hour < 19 %}
          {{ ((states('sensor.50_min_peak_time_usage') | float)/1000) }}
        {% else %}
          {{ 0 | float }}
        {% endif %}

# 25 minute
- platform: filter
  name: "25 min peak time usage"
  entity_id: sensor.peak_time_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 0:25
      precision: 2
- platform: template
  sensors:
    25_min_peak_time_demand:
      friendly_name: 25 Min Peak Time Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: >
        {% if now().hour >= 16 and now().hour < 19 %}
          {{ ((states('sensor.25_min_peak_time_usage') | float)/1000) }}
        {% else %}
          {{ 0 | float }}
        {% endif %}

# 15 minute
- platform: filter
  name: "15 min peak time usage"
  entity_id: sensor.peak_time_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 0:15
      precision: 2
- platform: template
  sensors:
    15_min_peak_time_demand:
      friendly_name: 15 Min Peak Time Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: >
        {% if now().hour >= 16 and now().hour < 19 %}
          {{ ((states('sensor.15_min_peak_time_usage') | float)/1000) }}
        {% else %}
          {{ 0 | float }}
        {% endif %}

# 5 minute
- platform: filter
  name: "5 min peak time usage"
  entity_id: sensor.peak_time_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 0:05
      precision: 2
- platform: template
  sensors:
    5_min_peak_time_demand:
      friendly_name: 5 Min Peak Time Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: >
        {% if now().hour >= 16 and now().hour < 19 %}
          {{ ((states('sensor.5_min_peak_time_usage') | float)/1000) }}
        {% else %}
          {{ 0 | float }}
        {% endif %}

# 20 min
- platform: filter
  name: "Medium peak time usage"
  entity_id: sensor.peak_time_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 00:20
      precision: 2
- platform: template
  sensors:
    medium_peak_time_demand:
      friendly_name: 20 Min Peak Time Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: >
        {% if now().hour >= 16 and now().hour < 19 %}
          {{ ((states('sensor.medium_peak_time_usage') | float)/1000) }}
        {% else %}
          {{ 0 | float }}
        {% endif %}

# 40 min
- platform: filter
  name: "Medium long peak time usage"
  entity_id: sensor.peak_time_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 00:40
      precision: 2
- platform: template
  sensors:
    medium_long_peak_time_demand:
      friendly_name: 40 Min Peak Time Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: >
        {% if now().hour >= 16 and now().hour < 19 %}
          {{ ((states('sensor.medium_long_peak_time_usage') | float)/1000) }}
        {% else %}
          {{ 0 | float }}
        {% endif %}

# 10 min
- platform: filter
  name: "Fast peak time usage"
  entity_id: sensor.peak_time_usage
  filters:
    - filter: time_simple_moving_average
      window_size: 00:10
      precision: 2
- platform: template
  sensors:
    fast_peak_time_demand:
      friendly_name: 10 Min Peak Time Demand
      unit_of_measurement: 'kWh'
      icon_template: "mdi:flash"
      value_template: >
        {% if now().hour >= 16 and now().hour < 19 %}
          {{ ((states('sensor.fast_peak_time_usage') | float)/1000) }}
        {% else %}
          {{ 0 | float }}
        {% endif %}

- platform: template
  sensors:
    ac_timer_active:
      friendly_name: AC Timer Active
      value_template: >
        {% if is_state('timer.ac_run_timer', 'idle') %}
          {{ 0 | int }}
        {% else %}
          {{ 1 | int }}
        {% endif %}

- platform: template
  sensors:
    ac_timer_remaining:
      friendly_name: "AC Timer Remaining"
      value_template: >-
        {%- if (states['timer.ac_run_timer'].attributes.duration == "none") or (states['timer.ac_run_timer'].state == "idle") -%}
          {{ 0 | int }}
        {%- else -%}
          {{ ((((states['timer.ac_run_timer'].attributes.duration).split(':')[0] |int * 60 * 60) + ((states['timer.ac_run_timer'].attributes.duration).split(':')[1] |int * 60 ) + ((states['timer.ac_run_timer'].attributes.duration).split(':')[2] |int)) - (as_timestamp(now()) | float - states['sensor.timer_start_ac_run'].state | float) ) | int }}
        {%- endif -%}
      entity_id: 
        - timer.ac_run_timer

- platform: template
  sensors:
    predicted_demand_50:
      friendly_name: "Predicted 1 hr demand"
      value_template: "{{ states('input_number.predicted_demand_50') }}"
      unit_of_measurement: 'kWh'

- platform: template
  sensors:
    predicted_demand_30:
      friendly_name: "Predicted 30 min demand"
      value_template: "{{ states('input_number.predicted_demand_30') }}"
      unit_of_measurement: 'kWh'
